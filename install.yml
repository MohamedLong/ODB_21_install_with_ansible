---
- name: Install Oracle Database 21c
  hosts: oracle_db
  become: true
  vars:
    oracle_user: "oracle"
    oracle_group: "oinstall"
    oracle_base: "/u01/app/oracle"
    oracle_home: "/u01/app/oracle/product/21c/dbhome_1"
    inventory_location: "/u01/app/oraInventory"
    db_name: "ORCL"
    sys_password: "MySysPass123"
    system_password: "MySysPass123"
    oracle_zip: "/tmp/LINUX.X64_213000_db_home.zip"
    local_oracle_zip: "files/LINUX.X64_213000_db_home.zip"
    oracle_install_dir: "/tmp/oracle_install"

  tasks:
    # Ensure Oracle directories exist
    - name: Create Oracle directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ oracle_user }}"
        group: "{{ oracle_group }}"
        mode: '0755'
      loop:
        - "{{ oracle_base }}"
        - "{{ oracle_home }}"
        - "{{ inventory_location }}"

    # Check if the Oracle ZIP file exists
    - name: Check if Oracle ZIP file exists
      stat:
        path: "{{ oracle_zip }}"
      register: oracle_zip_stat

    # Copy Oracle ZIP file from the controller to the server (if missing)
    - name: Copy Oracle ZIP file to server (if missing)
      copy:
        src: "{{ local_oracle_zip }}"
        dest: "{{ oracle_zip }}"
        owner: "{{ oracle_user }}"
        group: "{{ oracle_group }}"
        mode: '0644'
      when: not oracle_zip_stat.stat.exists

    # Ensure Oracle installation directory exists
    - name: Create Oracle install directory
      file:
        path: "{{ oracle_install_dir }}"
        state: directory
        owner: "{{ oracle_user }}"
        group: "{{ oracle_group }}"
        mode: '0755'

    # Ensure Oracle home directory exists
    - name: Ensure Oracle home directory exists
      file:
        path: "{{ oracle_home }}"
        state: directory
        owner: "{{ oracle_user }}"
        group: "{{ oracle_group }}"
        mode: '0755'
      become: true

    # Check if the Oracle DB ZIP file exists on the server
    - name: Check if Oracle DB ZIP file exists
      stat:
        path: "{{ oracle_zip }}"
      register: db_zip_stat

    # Copy Oracle ZIP file to server (if missing)
    - name: Copy Oracle ZIP file to server (if missing)
      copy:
        src: "{{ local_oracle_zip }}"
        dest: "{{ oracle_zip }}"
        owner: "{{ oracle_user }}"
        group: "{{ oracle_group }}"
        mode: '0644'
      when: not db_zip_stat.stat.exists

    # Unzip Oracle DB installation zip file
    - name: Extract Oracle DB installation zip file
      ansible.builtin.unarchive:
        src: "{{ oracle_zip }}"
        dest: "{{ oracle_home }}"
        remote_src: yes
        owner: "{{ oracle_user }}"
        group: "{{ oracle_group }}"
        mode: '0755'
      become_user: "{{ oracle_user }}"
      when: db_zip_stat.stat.exists

    # Run Oracle installer in silent mode
    - name: Run Oracle installer in silent mode
      command: >
        {{ oracle_home }}/runInstaller -silent
        -responseFile {{ oracle_home }}/install/response/db_install.rsp
        -ignorePrereq
      become_user: "{{ oracle_user }}"
      register: install_output
      # ignore_errors: yes

    # Check Oracle installation logs for success
    - name: Check Oracle installation logs
      shell: tail -n 50 /tmp/installActions*.log | grep -i "successful"
      register: install_log
      failed_when: install_log.stdout == ""

    # Run Oracle configuration script (non-interactive)
    - name: Run Oracle configuration script (non-interactive)
      expect:
        command: /etc/init.d/oracle-free-21c configure
        timeout: 1800
        responses:
          "password.*:": "{{ sys_password }}"
          "Confirm the password:": "{{ sys_password }}"
          "Enter SYS user password:": "{{ sys_password }}"
          "Enter SYSTEM user password:": "{{ system_password }}"
          "Enter PDBADMIN User Password:": "{{ sys_password }}"
      become: yes

    # Set Oracle environment variables
    - name: Set Oracle environment variables
      blockinfile:
        path: /home/oracle/.bash_profile
        block: |
          export ORACLE_BASE={{ oracle_base }}
          export ORACLE_HOME={{ oracle_home }}
          export ORACLE_SID={{ db_name }}
          export PATH=$ORACLE_HOME/bin:$PATH
          export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib
          export CLASSPATH=$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib
        owner: "{{ oracle_user }}"
        group: "{{ oracle_group }}"
        mode: '0644'

    # Create Oracle Database using DBCA
    - name: Create Oracle Database using DBCA
      command: >
        {{ oracle_home }}/bin/dbca
        -silent
        -createDatabase
        -templateName General_Purpose.dbc
        -gdbname {{ db_name }}
        -sid {{ db_name }}
        -characterSet AL32UTF8
        -sysPassword {{ sys_password }}
        -systemPassword {{ system_password }}
        -createAsContainerDatabase false
        -storageType FS
        -datafileDestination {{ oracle_base }}/oradata
        -memoryPercentage 40
        -emConfiguration NONE
      become_user: "{{ oracle_user }}"
      when: install_output.rc == 0

    - name: Show configuration output
      debug:
        msg: "{{ install_output.stdout }}"